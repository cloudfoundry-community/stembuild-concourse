---
platform: linux

inputs:
- name: stembuild # contains the state for the vm
- name: lgpo # contains the product configuration file

params:
  vcenter_ca_certs: ((vcenter-ca-certs))
  vcenter_url: ((vcenter-url))
  vcenter_username: ((vcenter-username))
  vcenter_password: ((vcenter-password))
  vm_inventory_path: ((vm-inventory-path))
  vm_ip: ((vm-ip))
  vm_password: ((vm-password))
  vm_username: ((vm-username))

  # Allows the LGPO file name to be changed
  LGPO_FILE: LGPO*.zip

run:
  path: bash
  args:
  - "-c"
  - |
    #set -eux
    set -e

    export STEMBUILD_FILE
    STEMBUILD_FILE="$(find stembuild/stembuild-linux-* 2>/dev/null | head -n1)"

    if [ -z "$STEMBUILD_FILE" ]; then
      echo "No stembuild file found in input."
      echo "Contents of stembuild input:"
      ls -al stembuild
      exit 1
    fi

    chmod +x ${STEMBUILD_FILE}

    # Resolve file
    LGPO_FILE="$(find lgpo/${LGPO_FILE} 2>/dev/null | head -n1)"

    if [ -z "${LGPO_FILE}" -o ! -f "${LGPO_FILE}" ]; then
      echo "No zip file found in input."
      echo "Contents of lgpo input:"
      ls -al lgpo
      exit 1
    fi

    #LGPO needs to be in the working folder (where stembuild is called from)
    cp "${LGPO_FILE}" ./LGPO.zip

    if [ ! -f "./LGPO.zip" ]; then
      echo "LGPO needs to be in working dir."
      echo "Contents of current dir:"
      ls -al
      exit 1
    fi

    #write the cert to file
    (echo ${vcenter_ca_certs} | awk '
      match($0,/- .* -/){
        val=substr($0,RSTART,RLENGTH)
        gsub(/- | -/,"",val)
        gsub(OFS,ORS,val)
        print substr($0,1,RSTART) ORS val ORS substr($0,RSTART+RLENGTH-1)}') > cert.crt

    #Start construct
    ./$STEMBUILD_FILE construct \
      -vm-ip "${vm_ip}" \
      -vm-username "${vm_username}" \
      -vm-password "${vm_password}"  \
      -vcenter-url "${vcenter_url}" \
      -vcenter-username "${vcenter_username}" \
      -vcenter-password "${vcenter_password}" \
      -vm-inventory-path "${vm_inventory_path}" \
      -vcenter-ca-certs cert.crt

    #Once the construct process exits, the VM is still doing work. We will know it's done with it shuts off. The following will download the govc cli and poll the VM for it's power status.

    apt-get update && apt-get -y install curl
    curl -L https://github.com/vmware/govmomi/releases/download/v0.20.0/govc_linux_amd64.gz | gunzip > /usr/local/bin/govc
    chmod +x /usr/local/bin/govc

    export GOVC_URL=${vcenter_url}
    export GOVC_USERNAME=${vcenter_username}
    export GOVC_PASSWORD=${vcenter_password}
    export GOVC_TLS_CA_CERTS=cert.crt
    #export GOVC_INSECURE=0

    #wait for VM to shut off
     while [[ $(echo $(govc vm.info -vm.ipath=${vm_inventory_path} | grep 'Power state:')) = "Power state: poweredOn"  ]]; do
      sleep 2m
    done

    echo "All Done."
