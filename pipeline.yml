resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

- name: azure-blobstore
  type: docker-image
  source:
    repository: pcfabr/azure-blobstore-resource

resources:
- name: ubuntu-image
  type: docker-image
  source: { repository: ubuntu }

- name: govc-image
  type: docker-image
  source: { repository: ubuntu }

- name: pipeline-tasks
  type: git
  source:
    uri: ((tasks.uri))
    branch: master
    username: ((tasks.username))
    password: ((tasks.password))
    paths:
    - tasks/*
    # - Dockerfile  # Only needed if using build-image task option#2

# Only need if using govc as resource from s3 (govc option#3b)
# - name: govc
#   type: s3
#   source:
#     access_key_id: ((s3.access_key_id))
#     bucket: ((s3.bucket.lgpo))
#     secret_access_key: ((s3.secret_access_key))
#     endpoint: ((s3.endpoint))
#     versioned_file: govc_linux_amd64.gz
#     #regexp: 0.0.(.*)/govc_linux_amd64.gz

# Only need if using govc as resource from github
# - name: govc
#   type: github-release
#   source:
#     repository: vmware
#     owner: govmomi
#     access_token: ((github_access_token))

- name: stembuild-release
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: stemcells-windows-server
    product_version: ((OS_VERSION)).(.*)
    sort_by: semver

#- name: stembuild-release
#  type: github-release
#  source:
#    owner: cloudfoundry-incubator
#    repository: stembuild
#    tag_filter: ((OS_VERSION)).(.*)

- name: lgpo
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    bucket: ((s3.bucket.lgpo))
    secret_access_key: ((s3.secret_access_key))
    endpoint: ((s3.endpoint))
    versioned_file: lgpo.zip
    #regexp: 0.0.(.*)/LGPO.zip

#- name: lgpo
#  type: gcs
#  source:
#    json_key: ((gcs.json-key))
#    bucket: ((gcs.bucket.stemcell))
#    versioned_file: lgpo.zip

#- name: lgpo
#  type: azure-blobstore
#  source:
#    storage_account_name: ((azure.storage_account_name))
#    storage_account_key: ((azure.storage_account_key))
#    container: ((azure.container.lgpo))
#    versioned_file: lgpo.zip

- name: stemcell-store
  type: s3
  source:
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3.secret_access_key))
    bucket: ((s3.bucket.stemcell))
    endpoint: ((s3.endpoint))
    regexp: bosh-stemcell-(.*)-vsphere.*\.tgz

#- name: stemcell-store
#  type: gcs
#  source:
#    json_key: ((gcs.json-key))
#    bucket: ((gcs.bucket.stemcell))
#    regexp: bosh-stemcell-(.*)-vsphere.*\.tgz

#- name: stemcell-store
#  type: azure-blobstore
#  source:
#    storage_account_name: ((azure.storage_account_name))
#    storage_account_key: ((azure.storage_account_key))
#    container: ((azure.container.stemcell))
#    regexp: bosh-stemcell-(.*)-vsphere.*\.tgz

jobs:
- name: construct
  plan:
    - get: ubuntu-image
    - get: pipeline-tasks
    - get: lgpo
    - get: stembuild-release
      params:
        globs:
          - stembuild-linux-*
    # Only needed if using govc as resource
    # - get: govc
    # Only needed if using build-image task
    # - task: build-image
    #   file: pipeline-tasks/tasks/build-image.yml
    #   privileged: true  # builder-task requires privilege
    #   input_mapping:
    #     context: pipeline-tasks

    - task: construct
      file: pipeline-tasks/tasks/construct.yml
      image: ubuntu-image
      # Only needed if using build-image task
      # image: rootfs
      input_mapping:
        stembuild: stembuild-release
        lgpo: lgpo
        # Only needed if using govc as resource
        # govc: govc
      params:
        vcenter_ca_certs: ((vcenter-ca-certs))
        vcenter_url: ((vcenter-url))
        vcenter_username: ((vcenter-username))
        vcenter_password: ((vcenter-password))
        vm_inventory_path: ((vm-inventory-path))
        vm_ip: ((vm-ip))
        vm_password: ((vm-password))
        vm_username: ((vm-username))

- name: package
  plan:
    - get: ubuntu-image
    - get: pipeline-tasks
    - get: stembuild-release
      trigger: true
      passed: [construct]
      params:
        globs:
          - stembuild-linux-*
    - task: construct
      file: pipeline-tasks/tasks/package.yml
      image: ubuntu-image
      input_mapping:
        stembuild: stembuild-release
      params:
        vcenter_ca_certs: ((vcenter-ca-certs))
        vcenter_url: ((vcenter-url))
        vcenter_username: ((vcenter-username))
        vcenter_password: ((vcenter-password))
        vm_inventory_path: ((vm-inventory-path))
    - put: stemcell-store
      params:
        file: stemcell/*.tgz
